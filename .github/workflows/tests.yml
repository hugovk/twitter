name: Tests

on: [push, pull_request]

env:
  FORCE_COLOR: 1

jobs:
  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        # Include 2.7, lowest and highest 3.x, plus any dev versions
        python-version: [
            "2.7",
            "3.6",
            "3.10",
            "3.11-dev",
            "pypy2.7",
        ]
        os: [ubuntu-latest]
        include:
          # Test Windows and macOS on other 3.x versions
          - { python-version: "3.8", os: "windows-latest" }
          - { python-version: "3.9", os: "macos-latest" }

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: setup.py

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install -U pytest pytest-cov mock
          python -m pip install -r requirements.txt

      - name: Tests
        shell: bash
        run: |
          pytest --cov twitter --cov tests --cov-report=xml

        # Linux only
      - name: Coveralls
        if: matrix.is == 'ubuntu-latest'
        uses: AndreMiras/coveralls-python-action@develop
        with:
          parallel: true

  coveralls_finish:
    needs: tests
    runs-on: ubuntu-latest
    steps:
    - name: Coveralls finished
      uses: AndreMiras/coveralls-python-action@develop
      with:
        parallel-finished: true
